# Default values for cord-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas
replicaCount: 1

image:
  repository: public.ecr.aws/cord-tools/cord-proxy
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

# -- Secrets needed to pull the image
imagePullSecrets: []

# -- Override the generated name for resources
nameOverride: ""
# -- Override the generated fullname for resources
fullnameOverride: ""

# -- The user to use for internal calls to the cord-api
internalAPIUser: "user"
# -- The password to use for internal calls to the cord-api
internalAPIPass: "password"

# apiUrl -- (string) URL to internal cord-api. Most likely this will be the Kubernetes DNS name for the cord-api service.
# @default -- http://cord-api:8080
apiUrl:

service:
  # -- The type of service to use for cord-proxy
  type: ClusterIP
  # -- The port to use for the service
  port: 80

metrics:
  # -- Enable prometheus metric collection
  enabled: false

serviceMonitor:
  # -- Enable creating a ServiceMonitor for collecting metrics using Prometheus Operator
  enabled: false

ingress:
  # -- Enable creating an Ingress
  enabled: true
  # -- Annotations to add to the ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Hosts to define for the ingress. This should be a wildcard.
  hosts:
    - host: "*.cordtools.local"
      paths:
        - path: /
  # -- TLS certificates to add to the ingress
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Annotations to add to pods
podAnnotations: {}

# -- Security context to set on the pods
podSecurityContext: {}
  # fsGroup: 2000

# -- Security context to set on the container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Horizontal Pod Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
